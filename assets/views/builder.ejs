<!DOCTYPE html>
<html>

<%- include('partials/head.ejs') %>

<body>
    <div class="ui container main-container">
        <%- include('partials/header.ejs') %>
        <div class="ui segment builder-container">
            <div id="dimmer" class="ui dimmer">
                <div class="ui text loader" id="loadingText">
                    <div class="loading-content">
                        <div class="terminal-text"></div>
                        <div class="progress-bar">
                            <div class="progress"></div>
                        </div>
                    </div>
                </div>
            </div>

            <h1 class="ui center aligned header builder-title">APK Builder</h1>
            <div class="ui form" id="form">
                <div class="inline fields">
                    <div class="six wide field">
                        <div class="ui labeled input">
                            <div class="ui label protocol-label">
                                http://
                            </div>
                            <input type="text" id="uriInput" placeholder="IP / Public URL" 
                                title="This is the public url of your server (AryanVBW.domain.com)">
                        </div>
                    </div>
                    <div class="two wide field">
                        <label class="port-label">:</label>
                        <input type="number" id="portInput" placeholder="PORT" min="2048" max="25565"
                            title="This is the `control_port` set in the consts" value="<%= myPort %>">
                    </div>
                </div>
                <div class="inline fields">
                    <div class="eight wide field">
                        <button id="gobuild" class="ui fluid button build-btn">
                            <i class="wrench icon"></i>Build
                        </button>
                    </div>
                </div>
            </div>

            <div class="ui form" id="download" style="display: none">
                <div class="inline fields">
                    <div class="eight wide field">
                        <a class="ui fluid button download-btn" download="AryanVBW.apk" href="/build.s.apk">
                            <i class="download icon"></i>Download APK
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <style>
        .main-container {
            padding-bottom: 80px;
        }
        
        .builder-container {
            border-radius: 8px;
            transition: all 0.3s ease;
            padding: 30px;
        }
        
        [data-theme="dark"] .builder-container {
            background-color: rgba(18, 18, 18, 0.8);
            border: 1px solid var(--highlight-color);
            box-shadow: 0 0 20px rgba(0, 255, 157, 0.2);
        }
        
        .builder-title {
            font-family: 'Courier New', monospace !important;
            margin-bottom: 30px !important;
            font-size: 2.5em !important;
            text-transform: uppercase;
            letter-spacing: 2px;
        }
        
        [data-theme="dark"] .builder-title {
            color: var(--highlight-color) !important;
            text-shadow: 0 0 10px rgba(0, 255, 157, 0.5);
        }
        
        .inline.fields {
            justify-content: center;
            margin-bottom: 20px !important;
        }
        
        [data-theme="dark"] .ui.labeled.input {
            border: 1px solid var(--highlight-color);
            border-radius: 4px;
            overflow: hidden;
            box-shadow: 0 0 10px rgba(0, 255, 157, 0.2);
        }
        
        [data-theme="dark"] .protocol-label {
            background-color: rgba(0, 255, 157, 0.1) !important;
            color: var(--highlight-color) !important;
            border: none !important;
            font-family: 'Courier New', monospace;
        }
        
        [data-theme="dark"] input {
            background-color: rgba(18, 18, 18, 0.9) !important;
            color: var(--text-color) !important;
            border: none !important;
            font-family: 'Courier New', monospace !important;
        }
        
        [data-theme="dark"] input:focus {
            background-color: rgba(18, 18, 18, 0.95) !important;
            box-shadow: 0 0 10px rgba(0, 255, 157, 0.3) !important;
        }
        
        [data-theme="dark"] .port-label {
            color: var(--highlight-color) !important;
            font-size: 1.2em;
            margin: 0 10px;
        }
        
        .build-btn, .download-btn {
            font-family: 'Courier New', monospace !important;
            text-transform: uppercase;
            letter-spacing: 1px;
            transition: all 0.3s ease !important;
            height: 45px;
        }
        
        [data-theme="dark"] .build-btn {
            background-color: transparent !important;
            color: var(--highlight-color) !important;
            border: 1px solid var(--highlight-color) !important;
            box-shadow: 0 0 10px rgba(0, 255, 157, 0.2);
        }
        
        [data-theme="dark"] .build-btn:hover {
            background-color: var(--highlight-color) !important;
            color: #121212 !important;
            box-shadow: 0 0 20px rgba(0, 255, 157, 0.4);
        }
        
        [data-theme="dark"] .download-btn {
            background-color: transparent !important;
            color: #00ccff !important;
            border: 1px solid #00ccff !important;
            box-shadow: 0 0 10px rgba(0, 204, 255, 0.2);
        }
        
        [data-theme="dark"] .download-btn:hover {
            background-color: #00ccff !important;
            color: #121212 !important;
            box-shadow: 0 0 20px rgba(0, 204, 255, 0.4);
        }
        
        /* Loading animation styles */
        .loading-content {
            text-align: center;
        }
        
        .terminal-text {
            font-family: 'Courier New', monospace;
            color: var(--highlight-color);
            margin-bottom: 15px;
            font-size: 1.1em;
            text-shadow: 0 0 5px rgba(0, 255, 157, 0.5);
        }
        
        .progress-bar {
            width: 300px;
            height: 2px;
            background: rgba(255, 255, 255, 0.1);
            margin: 10px auto;
            position: relative;
            overflow: hidden;
        }
        
        .progress {
            position: absolute;
            left: -100%;
            width: 100%;
            height: 100%;
            background: var(--highlight-color);
            animation: progress 2s linear infinite;
            box-shadow: 0 0 10px var(--highlight-color);
        }
        
        @keyframes progress {
            0% {
                left: -100%;
            }
            100% {
                left: 100%;
            }
        }
        
        [data-theme="dark"] .ui.dimmer {
            background-color: rgba(18, 18, 18, 0.95);
        }
        
        /* Matrix rain effect for loading */
        .matrix-rain {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            pointer-events: none;
            z-index: 9999;
        }
        
        @keyframes glitch {
            0% {
                transform: translate(0);
            }
            20% {
                transform: translate(-2px, 2px);
            }
            40% {
                transform: translate(-2px, -2px);
            }
            60% {
                transform: translate(2px, 2px);
            }
            80% {
                transform: translate(2px, -2px);
            }
            100% {
                transform: translate(0);
            }
        }
        
        [data-theme="dark"] .terminal-text {
            animation: glitch 0.5s cubic-bezier(.25, .46, .45, .94) both infinite;
        }
    </style>

    <script>
        gtag('event', 'screen_view', {
            'screen_name': 'apkBuilder',
            'app_name': 'AryanVBW'
        });

        var loadingTexts = [
            "Initializing Build Process...",
            "Decompiling APK...",
            "Patching Server Information...",
            "Injecting Payload...",
            "Compiling Modified APK...",
            "Signing Package...",
            "Verifying Build Integrity...",
            "Finalizing Build..."
        ];

        var loadingIndex = 0;
        var isDone = false;
        var isDoneInterval;

        function createMatrixRain() {
            const canvas = document.createElement('canvas');
            canvas.classList.add('matrix-rain');
            document.body.appendChild(canvas);
            const ctx = canvas.getContext('2d');
            
            canvas.width = window.innerWidth;
            canvas.height = window.innerHeight;
            
            const matrix = "ABCDEFGHIJKLMNOPQRSTUVWXYZ123456789@#$%^&*()*&^%";
            const matrixChars = matrix.split('');
            
            const fontSize = 14;
            const columns = canvas.width/fontSize;
            const drops = [];
            
            for(let x = 0; x < columns; x++)
                drops[x] = 1;
            
            function draw() {
                ctx.fillStyle = 'rgba(0, 0, 0, 0.04)';
                ctx.fillRect(0, 0, canvas.width, canvas.height);
                
                ctx.fillStyle = '#00ff9d';
                ctx.font = fontSize + 'px monospace';
                
                for(let i = 0; i < drops.length; i++) {
                    const text = matrixChars[Math.floor(Math.random()*matrixChars.length)];
                    ctx.fillText(text, i*fontSize, drops[i]*fontSize);
                    
                    if(drops[i]*fontSize > canvas.height && Math.random() > 0.975)
                        drops[i] = 0;
                    
                    drops[i]++;
                }
            }
            
            return setInterval(draw, 35);
        }

        $('#gobuild').click((e) => {
            $('#dimmer').addClass('active');
            build($('#uriInput').val(), $('#portInput').val());
            setTimeout(loaderText, 500);
            
            // Start matrix rain effect
            const matrixInterval = createMatrixRain();
            
            // Clean up matrix effect when done
            isDoneInterval = setInterval(() => {
                if (isDone) {
                    clearInterval(matrixInterval);
                    const canvas = document.querySelector('.matrix-rain');
                    if (canvas) canvas.remove();
                }
            }, 100);
        });

        function loaderText() {
            var nextTimeout = Math.floor(Math.random() * 1500) + 700;
            $('.terminal-text').text(loadingTexts[loadingIndex]);
            loadingIndex++;
            
            if (loadingIndex !== loadingTexts.length) {
                setTimeout(loaderText, nextTimeout);
            } else {
                isDoneInterval = setInterval(() => {
                    if (isDone) {
                        clearInterval(isDoneInterval);
                        isDone = false;
                        $('#dimmer').fadeOut(500, () => {
                            $('#download').removeClass('active');
                        });
                        $('#form').fadeOut(500, () => {
                            $('#download').fadeIn(200);
                        });
                    }
                }, 100);
            }
        }

        function build(URI, PORT) {
            gtag('event', 'build', {
                'builduri': URI + ':' + PORT
            });
            $.post("/builder?uri=" + URI + "&port=" + PORT, function (data) {
                if (!data.error) {
                    isDone = true;
                    showNotification('#00ff9d', 'Build completed successfully!');
                } else {
                    showNotification('#ff5252', data.error);
                }
            });
        }
    </script>
    <%- include('partials/footer.ejs') %>
</body>

</html>
