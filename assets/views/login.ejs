<!DOCTYPE html>
<html>
<%- include('partials/head.ejs') %>
<body>
    <canvas id="matrix"></canvas>
    <div class="ui middle aligned center aligned grid main-container">
        <div class="column" style="max-width: 450px;">
            <div class="login-box">
                <div class="logo-wrapper">
                    <img src="/logo.png" alt="ANDRO" class="andro-logo">
                </div>
                <form class="ui form" action="/login" method="POST">
                    <div class="field">
                        <div class="ui left icon input">
                            <i class="user circle icon"></i>
                            <input type="text" name="username" placeholder="Username" required autocomplete="off">
                        </div>
                    </div>
                    <div class="field">
                        <div class="ui left icon input">
                            <i class="lock icon"></i>
                            <input type="password" name="password" placeholder="Password" required>
                        </div>
                    </div>
                    <button class="ui fluid large submit button" type="submit">
                        <span></span>
                        <span></span>
                        <span></span>
                        <span></span>
                        LOGIN
                    </button>

                    <div class="ui divider"></div>
                    <a href="/register" class="ui fluid register button">
                        <span></span>
                        <span></span>
                        <span></span>
                        <span></span>
                        CREATE ACCOUNT
                    </a>
                </form>
            </div>
        </div>
    </div>

    <div class="footer-text">
        <p>Made with <span class="heart">‚ù§Ô∏è‚Äçüî•</span> By <a href="https://github.com/AryanVBW" target="_blank" class="author-link">üî•Viveküî•</a></p>
    </div>

    <style>
        body {
            margin: 0;
            padding: 0;
            height: 100vh;
            font-family: 'Courier New', monospace;
            background: #000;
            overflow: hidden;
        }

        #matrix {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: -1;
        }

        .main-container {
            height: 100vh;
            position: relative;
            z-index: 1;
        }

        .login-box {
            background: rgba(0, 0, 0, 0.8);
            border: 2px solid #00ff9d;
            box-shadow: 0 0 25px #00ff9d;
            padding: 40px;
            border-radius: 10px;
            backdrop-filter: blur(10px);
            animation: borderGlow 2s infinite alternate;
        }

        .glitch-wrapper {
            margin-bottom: 30px;
        }

        .glitch {
            color: #00ff9d;
            font-size: 40px;
            text-transform: uppercase;
            position: relative;
            text-shadow: 0 0 10px #00ff9d;
            animation: glitch 1s infinite;
        }

        .glitch::before,
        .glitch::after {
            content: attr(data-text);
            position: absolute;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
        }

        .glitch::before {
            left: 2px;
            text-shadow: -2px 0 #ff00ff;
            animation: glitch-1 2s infinite linear alternate-reverse;
        }

        .glitch::after {
            left: -2px;
            text-shadow: 2px 0 #00ffff;
            animation: glitch-2 3s infinite linear alternate-reverse;
        }

        .ui.input {
            width: 100%;
            margin-bottom: 20px;
        }

        .ui.input input {
            background: rgba(0, 0, 0, 0.5) !important;
            border: 1px solid #00ff9d !important;
            color: #fff !important;
            border-radius: 5px !important;
            padding: 15px !important;
            transition: all 0.3s ease !important;
        }

        .ui.input input:focus {
            background: rgba(0, 0, 0, 0.7) !important;
            box-shadow: 0 0 10px #00ff9d !important;
        }

        .ui.input i.icon {
            color: #00ff9d;
            opacity: 0.8;
        }

        .submit.button,
        .register.button {
            background: transparent !important;
            color: #00ff9d !important;
            text-transform: uppercase;
            font-weight: bold;
            letter-spacing: 2px;
            border: 2px solid #00ff9d !important;
            padding: 15px !important;
            position: relative;
            overflow: hidden;
            transition: 0.5s !important;
            margin: 10px 0;
        }

        .submit.button:hover,
        .register.button:hover {
            background: #00ff9d !important;
            color: #000 !important;
            box-shadow: 0 0 20px #00ff9d;
        }

        .submit.button span,
        .register.button span {
            position: absolute;
            display: block;
        }

        .button span:nth-child(1) {
            top: 0;
            left: -100%;
            width: 100%;
            height: 2px;
            background: linear-gradient(90deg, transparent, #00ff9d);
            animation: btn-anim1 1s linear infinite;
        }

        .button span:nth-child(2) {
            top: -100%;
            right: 0;
            width: 2px;
            height: 100%;
            background: linear-gradient(180deg, transparent, #00ff9d);
            animation: btn-anim2 1s linear infinite;
            animation-delay: .25s;
        }

        .button span:nth-child(3) {
            bottom: 0;
            right: -100%;
            width: 100%;
            height: 2px;
            background: linear-gradient(270deg, transparent, #00ff9d);
            animation: btn-anim3 1s linear infinite;
            animation-delay: .5s;
        }

        .button span:nth-child(4) {
            bottom: -100%;
            left: 0;
            width: 2px;
            height: 100%;
            background: linear-gradient(360deg, transparent, #00ff9d);
            animation: btn-anim4 1s linear infinite;
            animation-delay: .75s;
        }

        .ui.divider {
            border-top: 1px solid #00ff9d !important;
            border-bottom: 1px solid #00ff9d !important;
            margin: 25px 0 !important;
            opacity: 0.3;
        }

        @keyframes borderGlow {
            from {
                box-shadow: 0 0 15px #00ff9d;
            }
            to {
                box-shadow: 0 0 25px #00ff9d;
            }
        }

        @keyframes glitch {
            2%, 64% {
                transform: translate(2px,0) skew(0deg);
            }
            4%, 60% {
                transform: translate(-2px,0) skew(0deg);
            }
            62% {
                transform: translate(0,0) skew(5deg);
            }
        }

        @keyframes btn-anim1 {
            0% { left: -100%; }
            50%,100% { left: 100%; }
        }

        @keyframes btn-anim2 {
            0% { top: -100%; }
            50%,100% { top: 100%; }
        }

        @keyframes btn-anim3 {
            0% { right: -100%; }
            50%,100% { right: 100%; }
        }

        @keyframes btn-anim4 {
            0% { bottom: -100%; }
            50%,100% { bottom: 100%; }
        }

        .footer-text {
            position: fixed;
            bottom: 20px;
            left: 0;
            right: 0;
            text-align: center;
            color: #fff;
            text-shadow: 0 0 5px #00ff9d;
        }

        .heart {
            color: #ff0066;
            animation: heartbeat 1.5s infinite;
        }

        .author-link {
            color: #00ff9d;
            text-decoration: none;
            transition: 0.3s;
        }

        .author-link:hover {
            color: #fff;
            text-shadow: 0 0 10px #00ff9d;
        }

        @keyframes heartbeat {
            0% { transform: scale(1); }
            50% { transform: scale(1.2); }
            100% { transform: scale(1); }
        }

        .logo-wrapper {
            margin-bottom: 40px;
        }

        .andro-logo {
            width: 180px;
            height: auto;
            margin: 0 auto;
            display: block;
            animation: logoGlow 2s infinite alternate;
            transform: translateY(10px);
            transition: transform 0.3s ease;
        }

        .andro-logo:hover {
            transform: translateY(0) scale(1.05);
        }

        @keyframes logoGlow {
            from {
                filter: drop-shadow(0 0 8px #00ff9d);
            }
            to {
                filter: drop-shadow(0 0 20px #00ff9d);
            }
        }
    </style>

    <script>
        // Matrix Rain Effect
        const canvas = document.getElementById('matrix');
        const ctx = canvas.getContext('2d');

        canvas.width = window.innerWidth;
        canvas.height = window.innerHeight;

        const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789@#$%^&*()';
        const drops = [];
        const fontSize = 15;
        const columns = canvas.width / fontSize;

        for(let i = 0; i < columns; i++) {
            drops[i] = 1;
        }

        function drawMatrix() {
            ctx.fillStyle = 'rgba(0, 0, 0, 0.05)';
            ctx.fillRect(0, 0, canvas.width, canvas.height);

            ctx.fillStyle = '#0F0';
            ctx.font = fontSize + 'px monospace';

            for(let i = 0; i < drops.length; i++) {
                const text = chars[Math.floor(Math.random() * chars.length)];
                ctx.fillText(text, i * fontSize, drops[i] * fontSize);

                if(drops[i] * fontSize > canvas.height && Math.random() > 0.975) {
                    drops[i] = 0;
                }
                drops[i]++;
            }
        }

        setInterval(drawMatrix, 33);

        // Form validation
        $(document).ready(function() {
            $('.ui.form').form({
                fields: {
                    username: {
                        identifier: 'username',
                        rules: [{
                            type: 'empty',
                            prompt: 'Please enter your username'
                        }]
                    },
                    password: {
                        identifier: 'password',
                        rules: [{
                            type: 'empty',
                            prompt: 'Please enter your password'
                        }]
                    }
                }
            });

            // Handle error messages
            const urlParams = new URLSearchParams(window.location.search);
            const errorType = urlParams.get('e');
            
            if (errorType) {
                let errorMessage = '';
                switch(errorType) {
                    case 'badLogin':
                        errorMessage = 'Access Denied: Invalid credentials';
                        break;
                    case 'missingUsername':
                        errorMessage = 'Username required';
                        break;
                    case 'missingPassword':
                        errorMessage = 'Password required';
                        break;
                    default:
                        errorMessage = 'Authentication error';
                }
                
                showNotification('#ff5252', errorMessage);
            }
        });
    </script>
</body>
</html>
